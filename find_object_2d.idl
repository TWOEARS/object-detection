/*
 * Copyright (c) 2015-2017 LAAS/CNRS
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	FINDOBJECT2D_STRUCT_H
#define	FINDOBJECT2D_STRUCT_H

module find_object_2d
{
    struct timestamp
    {
        unsigned long sec;
        unsigned long usec;
    };

    struct std_msgs__Header
    {
        unsigned long seq; /*uint32_t*/
        timestamp stamp;
        string frame_id;
    };

    struct std_msgs__MultiArrayDimension
    {
        string label;
        unsigned long size;
        unsigned long stride;
    };

    struct std_msgs__MultiArrayLayout
    {
        sequence<std_msgs__MultiArrayDimension> dim;
        unsigned long data_offset;
    };
    
    struct std_msgs__Float32MultiArray
    {
        std_msgs__MultiArrayLayout layout;
        sequence<float> data;   //[ObjectId1, objectWidth, objectHeight, h11, h12, h13, h21, h22, h23, h31, h32, h33, ObjectId2...] 
    };

    struct find_object_2d__ObjectsStamped
    {
        std_msgs__Header header;
        std_msgs__Float32MultiArray objects;
    };

//#pragma masquerade ros std_msgs__Float32MultiArray std_msgs/Float32MultiArray
#pragma masquerade ros find_object_2d__ObjectsStamped find_object_2d/ObjectsStamped
};

#endif
