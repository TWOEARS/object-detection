/*  Copyright (c) 2015, LAAS/CNRS
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, 
 *    this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright notice, 
 *    this list of conditions and the following disclaimer in the documentation 
 *    and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the copyright holder nor the names of its contributors 
 *    may be used to endorse or promote products derived from this software 
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef	CAMERACALIBRATION_STRUCT_H
#define	CAMERACALIBRATION_STRUCT_H

module calibrationParameters
{
    struct timestamp
    {
        unsigned long sec;
        unsigned long usec;
    };

    struct std_msgs__Header
    {
        unsigned long seq; /*uint32_t*/
        timestamp stamp;
        string frame_id;
    };

    struct sensor_msgs__RegionOfInterest
    {
        unsigned long x_offset;
        unsigned long y_offset;
        unsigned long height;
        unsigned long width;
        boolean do_rectify;
    };

    struct sensor_msgs__CameraInfo
    {
        std_msgs__Header header;
        unsigned long height;   /*Image dimension with which the camera was calibrated*/
        unsigned long width;    /*Image dimension with which the camera was calibrated*/
        string distortion_model; /*For most cameras is 'plumb_bob'*/
        sequence<double> D;   /*Distortion parameters. For 'plumb_bob': (k1, k2, t1, t2, k3)*/
        double K[9];    /*Intrinsic camera matrix for the raw (distorted) images [3x3]*/
        double R[9];    /*Rectification matrix [3x3]*/
        double P[12];   /*Projection/camera matrix [3x4]*/
        unsigned long binning_x;
        unsigned long binning_y;
        sensor_msgs__RegionOfInterest roi;
    };

#pragma masquerade ros sensor_msgs__CameraInfo sensor_msgs/CameraInfo
};
#endif
